#include<iostream>
using namespace std;
int main()
{
    int p,r,i,j;
    cout << "Enter number of processes: ";
    cin >> p;
    cout << "Enter number of resources: ";
    cin >> r;
    
    int flag[p];
    for(int i = 0; i < p; i++)
    {
        flag[i] = 0;
    }
        
    int alloc[p][r], max[p][r], need[p][r], avail[r], result[p];

    cout << endl << "Enter allocation matrix:\n";
    for(i = 0; i < p; i++)
    {
    	cout << "\tFor process " << i+1 << ": ";
        for(j = 0; j < r; j++)
        {
            cin >> alloc[i][j];
        }
    }
    

    cout << endl << "Enter the max matrix:\n";
    for(i = 0; i < p; i++)
    {
    	cout << "\tFor process " << i+1 << ": ";
        for(j = 0; j < r; j++)
        {
            cin >> max[i][j];
        }
    }
    
    cout << endl << "Enter available resources:\n";
    for(i = 0; i < r; i++)
    {
        cout << "\tResource " << i+1 << ": ";
        cin >> avail[i];
    }

    for(i = 0; i < p; i++)
    {
        for(j = 0; j < r; j++)
        {
            need[i][j] = max[i][j] - alloc[i][j];
        }
    }
    
    cout << endl << "Need matrix is:\n";
    for(i = 0; i < p; i++)
    {
    	cout << "\tFor process " << i+1 << ": ";
        for(j = 0; j < r; j++)
        {
            cout << need[i][j] << " ";
        }
        cout << endl;
    }
    
    int a = 0;
    i = 0;
    while(1)
    {
        int l = 0;
        for(l = 0; l < p; l++)
        {
            if(flag[l] == 0)
            {
                break;
            }
        }
        if(l == p)
        {
            break;
        }
        if(i == p)
        {
            i = 0;
        }
        if(flag[i] == 0)
        {
            int k;
            for(k = 0; k < r; k++)
            {
                if(need[i][k] > avail[k])
                {
                    break;
                }
            }
            if(k != r)
            {
                i++;
                continue;
            }
            else
            {
                for(k = 0; k < r; k++)
                {
                    avail[k] += alloc[i][k];
                }
            }
            result[a] = i+1;
            flag[i] = 1;
            a++;
            i++;
        }
        else
        {
            i++;
        }
    }

    cout << endl << "Safe sequence is: ";
    for(int x = 0; x < p; x++)
    {
        cout << result[x] << " ";
    }
    return 0;
}
