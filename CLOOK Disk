#include<bits/stdc++.h>
using namespace std;

void CLOOK(int* arr, int n, string direction, int track_size){
    vector<int> left, right;
    int header=50;
    for(int i=0; i<n; i++){
        if(header>arr[i]) left.push_back(arr[i]);
    }
    for(int i=0; i<n; i++){
        if(header<arr[i]) right.push_back(arr[i]);
    }
    sort(left.begin(), left.end());
    sort(right.begin(), right.end());

    vector<int> seek_seq;
    int seek_distance=0;
    int curr_track=header;

        if(direction=="left"){
            for(int i=left.size()-1; i>=0; i--){
                curr_track=left[i];
                int distance=abs(header-curr_track);
                seek_seq.push_back(curr_track);
                seek_distance+=distance;
                header=curr_track;
            }
            for(int i=right.size()-1; i>=0; i--){
                curr_track=right[i];
                int distance=abs(header-curr_track);
                seek_seq.push_back(curr_track);
                seek_distance+=distance;
                header=curr_track;
            }
        }
        else if(direction=="right"){
            for(int i=0; i<right.size(); i++){
                curr_track=right[i];
                int distance=abs(header-curr_track);
                seek_seq.push_back(curr_track);
                seek_distance+=distance;
                header=curr_track;
            }
            for(int i=0; i<left.size(); i++){
                curr_track=left[i];
                int distance=abs(header-curr_track);
                seek_seq.push_back(curr_track);
                seek_distance+=distance;
                header=curr_track;
            }  
        }
    cout<<"The seek sequence is :\n";
    for(int i=0; i<seek_seq.size(); i++){
        cout<<seek_seq[i]<<" ";
    }
    cout<<"\nThe total seek operations are : "<<seek_distance<<endl;
}

int main(){
     int n=8;
    int req[n]={176,79,34,60,92,11,41,114}; 
    string direction="right"; // left here means from right to left
    int track_size=200; 
    CLOOK(req, n, direction, track_size);
return 0;
}
